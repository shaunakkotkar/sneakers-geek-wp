- pipeline: "Publish to WordPress"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  priority: "NORMAL"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  # - action: "Execute: Cypress test @woocommerce"
  #   type: "BUILD"
  #   working_directory: "/buddy/woocommerce-cy"
  #   docker_image_name: "cypress/browsers"
  #   docker_image_tag: "node12.19.0-chrome86-ff82"
  #   execute_commands:
  #   - "if [ ! -d third-party-integration-cypress ]; then"
  #   -   "git clone https://xendit:$GITHUB_TOKEN@github.com/xendit/third-party-integration-cypress.git"
  #   - "fi"
  #   - ""
  #   - "cd third-party-integration-cypress"
  #   - "git checkout master"
  #   - "git pull"
  #   - "rm -rf node_modules && npm i"
  #   - ""
  #   - "cp cypress.example.json cypress.json"
  #   - "npm run cypress:run-tags-with-chrome TAGS='@woocommerce'"
  #   setup_commands:
  #   - "apt-get update"
  #   - "apt-get -y upgrade"
  #   - "apt -y install sudo git curl dirmngr apt-transport-https lsb-release ca-certificates"
  #   - "curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -"
  #   - ""
  #   - "sudo apt -y install nodejs"
  #   - ""
  #   - "apt-get -y install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb"
  #   volume_mappings:
  #   - "/:/buddy/woocommerce-cy"
  #   trigger_condition: "ALWAYS"
  #   shell: "BASH"
  - action: "Publish plugin to Wordpress Marketplace"
    type: "BUILD"
    working_directory: "/buddy/woocommerce-wp-plugin-va"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "18.04"
    execute_commands:
    - "# trim function"
    - "trim() {"
    - "    local var=\"$*\""
    - "    # remove leading whitespace characters"
    - "    var=\"${var#\"${var%%[![:space:]]*}\"}\""
    - "    # remove trailing whitespace characters"
    - "    var=\"${var%\"${var##*[![:space:]]}\"}\"   "
    - "    printf '%s' \"$var\""
    - "}"
    - ""
    - "# get latest git commit message"
    - "commitMessage=`git log -1 --pretty=%b`"
    - ""
    - "# move up a directory"
    - "cd .."
    - ""
    - "# pull WC SVN repo"
    - "svn co $SVN_REPO_URL"
    - ""
    - "# move to SVN directory"
    - "pwd"
    - "cd $SVN_REPO_NAME"
    - ""
    - "# get current version from svn log"
    - "RS='\\n------------------------------------------------------------------------'"
    - "currentVersion=`svn log -l 1 | sed 's/^[[:space:]]*//g' | awk -v \"RS=$RS\" -F '[][]' '{print $2}'`"
    - "currentVersion=$(trim \"$currentVersion\")"
    - ""
    - "# get latest version from main PHP file"
    - "newVersion=`sed -n '/Version/p' ../woocommerce-wp-plugin-va/woocommerce-xendit-pg.php | sed 's/^[[:space:]]*//g' | awk -F 'Version:' '{print $2}'`"
    - "newVersion=$(trim \"$newVersion\")"
    - ""
    - "# compare version & validate"
    - "if [ \"$currentVersion\" = \"$newVersion\" ]"
    - "then"
    - "  echo \"No version changes in changelog. Aborting...\""
    - "  return 1 2>/dev/null"
    - "  exit 1"
    - "fi"
    - ""
    - "# run svn up"
    - "svn up"
    - ""
    - "# copy latest git files to /trunk"
    - "rsync -a --delete ../woocommerce-wp-plugin-va/. trunk/"
    - ""
    - "# set svn to ignore docker and tpic files"
    - "rm -rf trunk/third-party-integration-cypress"
    - "rm -rf trunk/docker"
    - ""
    - "# set svn to ignore git files"
    - "svn propset svn:ignore \"*.git"
    - ""
    - "*.gitignore"
    - "*README.md\" trunk"
    - "svn status --no-ignore"
    - ""
    - "# run svn stat"
    - "stat=`svn stat`"
    - "if [[ $stat != '' ]]"
    - "then"
    - "    # Search for any files to add"
    - "    addFiles=`svn stat | grep '^\\?'|sed 's/\\? / /g'`"
    - "    if [[ $addFiles != '' ]]"
    - "    then"
    - "        for file in $addFiles"
    - "        do"
    - "            svn add $file"
    - "        done"
    - "    fi"
    - "    # Search for any files to delete"
    - "    deleteFiles=`svn stat | grep '^\\!'|sed 's/\\! / /g'`"
    - "        if [[ $deleteFiles != '' ]]"
    - "        then"
    - "            for file in $deleteFiles"
    - "            do"
    - "                svn delete $file"
    - "            done"
    - "        fi"
    - "    "
    - "    # commit to svn"
    - "    svn stat"
    - "    svn ci --username $SVN_USERNAME --password $SVN_PASSWORD -m \"[$newVersion] $commitMessage\""
    - "    echo \"Successfully published to Wordpress!\""
    - "fi"
    - ""
    - "# create release in git"
    - "gitJson='{\"tag_name\": \"'\"$newVersion\"'\", \"target_commitish\": \"master\", \"name\": \"'\"$commitMessage\"'\", \"draft\": false, \"prerelease\": false}'"
    - "gitOutput=`curl -H \"Authorization: token $GIT_ACCESS_TOKEN\" --data \"$gitJson\" https://api.github.com/repos/xendit/woocommerce-wp-plugin-va/releases`"
    - ""
    - "# check if release is successful or not"
    - "errorMessage=`jq '.message' <<< \"$gitOutput\"`"
    - "if [[ -z \"$errorMessage\" ]]"
    - "then"
    - "    echo \"Successfully released new version in Git!\""
    - "else"
    - "\techo \"Failed to create git release. Aborting...\""
    - "    #return 1 2>/dev/null"
    - "\t#exit 1"
    - "fi"
    setup_commands:
    - "apt-get update && apt-get -y install git subversion rsync curl jq"
    volume_mappings:
    - "/:/buddy/woocommerce-wp-plugin-va"
    trigger_condition: "ALWAYS"
    shell: "BASH"
    variables:
    - key: "SVN_REPO_NAME"
      value: "woo-xendit-virtual-accounts"
    - key: "SVN_REPO_URL"
      value: "https://plugins.svn.wordpress.org/woo-xendit-virtual-accounts"